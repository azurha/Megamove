<Layouts.app flash={@flash} current_scope={@current_scope}>
  <div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">
          üöÄ Test API Valhalla - Route
        </h1>
        <p class="text-xl text-gray-600 max-w-2xl mx-auto">
          Test de la fonction route entre Dijon et Lyon
        </p>
      </div>
      
<!-- Error Alert -->
      <%= if @error do %>
        <div class="mb-6 bg-red-50 border border-red-200 rounded-lg p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                  clip-rule="evenodd"
                />
              </svg>
            </div>
            <div class="ml-3">
              <h3 class="text-sm font-medium text-red-800">
                Erreur
              </h3>
              <div class="mt-2 text-sm text-red-700">
                <p>{@error}</p>
              </div>
            </div>
          </div>
        </div>
      <% end %>
      
<!-- Loading Indicator -->
      <%= if @loading do %>
        <div class="mb-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <div class="flex items-center">
            <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600 mr-3"></div>
            <span class="text-blue-800">Calcul en cours...</span>
          </div>
        </div>
      <% end %>

      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Left Column: Controls -->
        <div class="space-y-6">
          <!-- Points de d√©part et d'arriv√©e -->
          <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">
              üìç Points de l'itin√©raire
            </h2>

            <div class="space-y-4">
              <%= for {location, index} <- Enum.with_index(@locations) do %>
                <div class="border border-gray-200 rounded-lg p-4">
                  <div class="flex items-center justify-between mb-3">
                    <span class="text-sm font-medium text-gray-700">
                      {if index == 0, do: "D√©part", else: "Arriv√©e"}
                    </span>
                    <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full">
                      Point {index + 1}
                    </span>
                  </div>

                  <div class="grid grid-cols-2 gap-3">
                    <div>
                      <label class="block text-xs font-medium text-gray-600 mb-1">
                        Latitude
                      </label>
                      <input
                        type="number"
                        step="any"
                        value={elem(location, 0)}
                        phx-blur="update_location"
                        phx-value-index={index}
                        phx-value-lat=""
                        phx-value-lon={elem(location, 1)}
                        class="w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                    <div>
                      <label class="block text-xs font-medium text-gray-600 mb-1">
                        Longitude
                      </label>
                      <input
                        type="number"
                        step="any"
                        value={elem(location, 1)}
                        phx-blur="update_location"
                        phx-value-index={index}
                        phx-value-lat={elem(location, 0)}
                        phx-value-lon=""
                        class="w-full px-3 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                  </div>

                  <div class="mt-2 text-xs text-gray-500">
                    Coordonn√©es actuelles : {format_coordinate(location)}
                  </div>
                </div>
              <% end %>
            </div>
          </div>
          
<!-- Action de test -->
          <div class="bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4">
              ‚ö° Test de l'API
            </h2>

            <div class="space-y-3">
              <button
                phx-click="calculate_route"
                disabled={length(@locations) < 2}
                class="w-full bg-green-600 text-white px-6 py-3 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 disabled:bg-gray-400 disabled:cursor-not-allowed text-lg font-medium"
              >
                üöó Calculer l'itin√©raire Dijon ‚Üí Lyon
              </button>

              <%= if @route_result do %>
                <button
                  phx-click="clear_results"
                  class="w-full bg-gray-600 text-white px-6 py-3 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500"
                >
                  Effacer les r√©sultats
                </button>
              <% end %>
            </div>
          </div>
        </div>
        
<!-- Right Column: Results -->
        <div class="space-y-6">
          <!-- Map Container -->
          <div class="bg-white rounded-lg shadow-md p-4">
            <h2 class="text-xl font-semibold text-gray-900 mb-3">üó∫Ô∏è Carte</h2>
            <.live_component
              module={MegamoveWeb.MapComponent}
              id="valhalla-map"
              markers={[
                %{lat: elem(Enum.at(@locations, 0), 0), lon: elem(Enum.at(@locations, 0), 1), label: "D√©part"},
                %{lat: elem(Enum.at(@locations, 1), 0), lon: elem(Enum.at(@locations, 1), 1), label: "Arriv√©e"}
              ]}
              polylines={[
                %{shape: @route_result && @route_result["trip"] && @route_result["trip"]["legs"] && (@route_result["trip"]["legs"] |> Enum.at(0) |> then(&(&1 && &1["shape"]))) || nil}
              ]}
            />
          </div>
          <!-- Debug: URL & Raw Response -->
          <%= if @request_url || @raw_response do %>
            <div class="bg-white rounded-lg shadow-md p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-4">üîé D√©tails de la requ√™te</h2>

              <div class="space-y-4">
                <div>
                  <div class="text-sm font-medium text-gray-700 mb-1">URL de la requ√™te</div>
                  <div class="text-xs text-gray-600 break-all bg-gray-50 border border-gray-200 rounded p-2">
                    {@request_url || "N/A"}
                  </div>
                </div>

                <div>
                  <div class="text-sm font-medium text-gray-700 mb-1">R√©ponse brute</div>
                  <pre
                    class="text-xs text-gray-700 bg-gray-50 border border-gray-200 rounded p-3 overflow-x-auto whitespace-pre-wrap"
                    phx-no-curly-interpolation
                  >
<%= @raw_response || "N/A" %>
                  </pre>
                </div>
              </div>
            </div>
          <% end %>
          
<!-- Route Result -->
          <%= if @route_result do %>
            <div class="bg-white rounded-lg shadow-md p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-4">
                üõ£Ô∏è R√©sultat de l'API Valhalla
              </h2>
              
<!-- Informations de l'API -->
              <div class="bg-gray-50 rounded-lg p-4 mb-4">
                <h3 class="text-sm font-medium text-gray-800 mb-2">Informations de l'API</h3>
                <div class="text-xs text-gray-600 space-y-1">
                  <p><strong>Status:</strong> {@route_result["trip"]["status"] || "N/A"}</p>
                  <p><strong>Units:</strong> {@route_result["trip"]["units"] || "N/A"}</p>
                  <p><strong>Language:</strong> {@route_result["trip"]["language"] || "N/A"}</p>
                </div>
              </div>

              <%= if trip = @route_result["trip"] do %>
                <div class="space-y-4">
                  <%= if summary = trip["summary"] do %>
                    <div class="grid grid-cols-2 gap-4">
                      <div class="bg-green-50 rounded-lg p-4">
                        <div class="text-sm font-medium text-green-800">Distance totale</div>
                        <div class="text-2xl font-bold text-green-900">
                          {format_distance(summary["length"])}
                        </div>
                      </div>
                      <div class="bg-blue-50 rounded-lg p-4">
                        <div class="text-sm font-medium text-blue-800">Dur√©e totale</div>
                        <div class="text-2xl font-bold text-blue-900">
                          {format_duration(summary["time"])}
                        </div>
                      </div>
                    </div>
                    
<!-- Informations suppl√©mentaires -->
                    <div class="grid grid-cols-3 gap-2 text-xs">
                      <%= if summary["has_toll"] do %>
                        <div class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded text-center">
                          P√©age
                        </div>
                      <% end %>
                      <%= if summary["has_highway"] do %>
                        <div class="bg-orange-100 text-orange-800 px-2 py-1 rounded text-center">
                          Autoroute
                        </div>
                      <% end %>
                      <%= if summary["has_ferry"] do %>
                        <div class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-center">
                          Ferry
                        </div>
                      <% end %>
                    </div>
                  <% end %>

                  <%= if legs = trip["legs"] do %>
                    <div class="space-y-2">
                      <h3 class="font-medium text-gray-900">Instructions de navigation :</h3>
                      <div class="max-h-64 overflow-y-auto space-y-2">
                        <%= for leg <- legs do %>
                          <%= for maneuver <- leg["maneuvers"] do %>
                            <div class="bg-gray-50 rounded-lg p-3">
                              <div class="text-sm text-gray-700">
                                {maneuver["instruction"]}
                              </div>
                              <%= if maneuver["street_names"] && length(maneuver["street_names"]) > 0 do %>
                                <div class="text-xs text-gray-500 mt-1">
                                  {Enum.join(maneuver["street_names"], ", ")}
                                </div>
                              <% end %>
                              <div class="flex justify-between text-xs text-gray-500 mt-1">
                                <span>{format_distance(maneuver["length"])}</span>
                                <span>{format_duration(maneuver["time"])}</span>
                              </div>
                            </div>
                          <% end %>
                        <% end %>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <!-- No Results -->
            <div class="bg-white rounded-lg shadow-md p-6 text-center">
              <div class="text-gray-400 mb-4">
                <svg
                  class="mx-auto h-12 w-12"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"
                  />
                </svg>
              </div>
              <h3 class="text-lg font-medium text-gray-900 mb-2">
                Pr√™t pour le test
              </h3>
              <p class="text-gray-500">
                Cliquez sur "Calculer l'itin√©raire" pour tester l'API Valhalla entre Dijon et Lyon.
              </p>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</Layouts.app>
